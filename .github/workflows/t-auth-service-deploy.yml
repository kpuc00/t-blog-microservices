# This workflow will build and push the image of the t-auth-service to Google Container Registry and deploy it to Google Cloud Run 
# on push or pull request to the main branch if there are changes in the t-auth-service folder.

name: Deploy t-auth-service to Google Cloud Run
on:
  push:
    branches:
      - main
    paths:
      - 't-auth-service/**'
  pull_request:
    branches:
      - main
    paths:
      - 't-auth-service/**'
jobs:
  deploy:
    name: Deploying t-auth-service
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v0.7.3
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY_JSON }}'

      # Build and push image to Google Container Registry
#       - name: Setting up
#         uses: google-github-actions/setup-gcloud@v0.6.0
#         with:
#           version: '290.0.1'
#           service_account_key: ${{ secrets.GCP_SA_KEY_JSON }}
#           service_account_email: "deploy-to-google-cloud-run@t-blog-bg.iam.gserviceaccount.com"
#           project_id: t-blog-bg

      - name: Building the Docker Image (üèó)
        working-directory: ./t-blog-service
        run: gcloud builds submit --tag gcr.io/t-blog-bg/t-auth-service:latest

      # Setup gcloud CLI
      - name: Deploy to Cloud Run (üöÄ)
        uses: google-github-actions/deploy-cloudrun@v0.10.0
        with:
          service: t-auth-service
          image: gcr.io/t-blog-bg/t-auth-service:latest
          region: europe-west1
          credentials: ${{ secrets.GCP_SA_KEY_JSON }}
          project_id: t-blog-bg
          env_vars: DB_HOSTNAME=${{ secrets.DB_HOSTNAME }},DB_USER=${{ secrets.DB_USER }},DB_PASSWORD=${{ secrets.DB_PASSWORD }},AUTH_SECRET_KEY=${{ secrets.AUTH_SECRET_KEY }},AUTH_TOKEN_ALGORITHM=${{ secrets.AUTH_TOKEN_ALGORITHM }},AUTH_ACCESS_TOKEN_EXPIRE_MINUTES=${{ secrets.AUTH_ACCESS_TOKEN_EXPIRE_MINUTES }},AUTH_SERVICE_POSTGRES_DB=${{ secrets.AUTH_SERVICE_POSTGRES_DB }}
